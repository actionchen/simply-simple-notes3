image: docker:19.03.8

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  MOUNT_POINT: /builds/$CI_PROJECT_PATH/mnt

include:
  - template: SAST.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml
  - template: Container-Scanning.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml
  - template: Managed-Cluster-Applications.gitlab-ci.yml
  
container_scanning:
    stage: test
    variables:
        GIT_STRATEGY: fetch
        KLAR_TRACE: "true"
        CLAIR_TRACE: "true"
dast:
  stage: dast
  variables:
    DAST_WEBSITE: http://$INGRESS_ENDPOINT/

dependency_scanning:
  stage: test
  variables:
    CI_DEBUG_TRACE: "true"
    
sast:
  stage: test
  variables:
    CI_DEBUG_TRACE: "true"
  artifacts:
    reports:
      sast: gl-sast-report.json

services:
  - docker:19.03.8-dind

stages:
  - build
  - test
  - deploy
  - dast

build:
  image: docker:19.03.8
  stage: build
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  script:
    - sleep 5
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE .
    - docker push $IMAGE
    
deploy_staging:
  # using a container image containing helm
  image: registry.gitlab.com/gitlab-org/cluster-integration/helm-install-image/releases/2.13.1-kube-1.11.9
  stage: deploy
  variables:
    TILLER_NAMESPACE: gitlab-managed-apps
    IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  script:
    # save the certs
    # - echo $TILLER_CA | base64 -d > tiller-ca.crt
    # - echo $TILLER_CERT | base64 -d > tiller.crt
    # - echo $TILLER_KEY | base64 -d > tiller.key
    # test that helm and tiller can respond
    # - helm init --tiller-tls --tiller-tls-verify --tiller-tls-cert=tiller.crt --tiller-tls-key=tiller.key --tls-ca-cert=tiller-ca.crt --service-account=tiller --tiller-namespace $TILLER_NAMESPACE
    # - helm version --tiller-connection-timeout 30 --tls --tls-ca-cert tiller-ca.crt --tls-cert tiller.crt --tls-key tiller.key --tiller-namespace $TILLER_NAMESPACE
    # upgrade or install the image
    # - helm upgrade -f helm/values.yaml --set image=$IMAGE --install notes ./helm --tiller-connection-timeout 30 --tls --tls-ca-cert tiller-ca.crt --tls-cert tiller.crt --tls-key tiller.key --tiller-namespace $TILLER_NAMESPACE
    - helm version
    - helm upgrade -f helm/values.yaml --set image=$IMAGE --install notes ./helm
  environment:
    name: staging
